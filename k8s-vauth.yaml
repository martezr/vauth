apiVersion: v1
kind: Namespace
metadata:
  name: vauth
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vsphere-config
  namespace: vauth
data:
  VSPHERE_SERVER: grtvcenter01.grt.local
  VSPHERE_USERNAME: vauth@vsphere.local
  VSPHERE_PASSWORD: Hashicorp1#
  VSPHERE_DATACENTER: GRT
  DB_HOST: cockroachdb
---
apiVersion: v1
kind: Pod
metadata:
  name: vauth-scheduler
  namespace: vauth
  labels:
    name: vauth-scheduler
spec:
  containers:
  - name: vauth-scheduler
    image: martezr/vauth-scheduler
---
apiVersion: v1
kind: Pod
metadata:
  name: vauth-worker
  namespace: vauth
  labels:
    name: vauth-worker
spec:
  containers:
  - name: vauth-worker
    image: martezr/vauth-worker
    envFrom:
      - configMapRef:
          name: vsphere-config
---
apiVersion: v1
kind: Pod
metadata:
  name: vauth-syncer
  namespace: vauth
  labels:
    name: vauth-syncer
spec:
  containers:
  - name: vauth-syncer
    image: martezr/vauth-syncer
    envFrom:
      - configMapRef:
          name: vsphere-config
---
apiVersion: v1
kind: Pod
metadata:
  name: vauth-watcher
  namespace: vauth
  labels:
    name: vauth-watcher
spec:
  containers:
  - name: vauth-watcher
    image: martezr/vauth-watcher
    envFrom:
      - configMapRef:
          name: vsphere-config
---
apiVersion: v1
kind: Pod
metadata:
  name: vauth-backend
  namespace: vauth
  labels:
    name: vauth-backend
spec:
  containers:
  - name: vauth-backend
    image: martezr/vauth-backend
    envFrom:
      - configMapRef:
          name: vsphere-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config
  namespace: vauth
data:
  nats.conf: |
    pid_file: "/var/run/nats/nats.pid"
    http: 8222
---
apiVersion: v1
kind: Service
metadata:
  name: nats
  namespace: vauth
  labels:
    app: nats
spec:
  selector:
    app: nats
  clusterIP: None
  ports:
  - name: client
    port: 4222
  - name: cluster
    port: 6222
  - name: monitor
    port: 8222
  - name: metrics
    port: 7777
  - name: leafnodes
    port: 7422
  - name: gateways
    port: 7522
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nats
  namespace: vauth
  labels:
    app: nats
spec:
  selector:
    matchLabels:
      app: nats
  replicas: 1
  serviceName: "nats"
  template:
    metadata:
      labels:
        app: nats
    spec:
      # Common volumes for the containers
      volumes:
      - name: config-volume
        configMap:
          name: nats-config
      - name: pid
        emptyDir: {}

      # Required to be able to HUP signal and apply config reload
      # to the server without restarting the pod.
      shareProcessNamespace: true

      #################
      #               #
      #  NATS Server  #
      #               #
      #################
      terminationGracePeriodSeconds: 60
      containers:
      - name: nats
        image: nats:2.1.7-alpine3.11
        ports:
        - containerPort: 4222
          name: client
          hostPort: 4222
        - containerPort: 7422
          name: leafnodes
          hostPort: 7422
        - containerPort: 6222
          name: cluster
        - containerPort: 8222
          name: monitor
        - containerPort: 7777
          name: metrics
        command:
         - "nats-server"
         - "--config"
         - "/etc/nats-config/nats.conf"

        # Required to be able to define an environment variable
        # that refers to other environment variables.  This env var
        # is later used as part of the configuration file.
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CLUSTER_ADVERTISE
          value: $(POD_NAME).nats.$(POD_NAMESPACE).svc
        volumeMounts:
          - name: config-volume
            mountPath: /etc/nats-config
          - name: pid
            mountPath: /var/run/nats

        # Liveness/Readiness probes against the monitoring
        #
        livenessProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          timeoutSeconds: 5

        # Gracefully stop NATS Server on pod deletion or image upgrade.
        #
        lifecycle:
          preStop:
            exec:
              # Using the alpine based NATS image, we add an extra sleep that is
              # the same amount as the terminationGracePeriodSeconds to allow
              # the NATS Server to gracefully terminate the client connections.
              #
              command: ["/bin/sh", "-c", "/nats-server -sl=ldm=/var/run/nats/nats.pid && /bin/sleep 60"]

---
apiVersion: batch/v1
kind: Job
metadata:
  name: cluster-init
  labels:
    app: cockroachdb
spec:
  template:
    spec:
      containers:
      - name: cluster-init
        image: cockroachdb/cockroach:v20.1.5
        namespace: vauth
        imagePullPolicy: IfNotPresent
        command:
          - "/cockroach/cockroach"
          - "init"
          - "--insecure"
          - "--host=cockroachdb-0.cockroachdb"
      restartPolicy: OnFailure